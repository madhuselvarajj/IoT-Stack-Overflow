"{\n    \"_nodetype\": \"FileAST\",\n    \"coord\": null,\n    \"ext\": [\n        {\n            \"_nodetype\": \"FuncDef\",\n            \"coord\": \"./Testdata/post-1671941.c:1:15\",\n            \"decl\": {\n                \"_nodetype\": \"Decl\",\n                \"name\": \"bit_swap\",\n                \"quals\": [],\n                \"storage\": [],\n                \"funcspec\": [],\n                \"coord\": \"./Testdata/post-1671941.c:1:15\",\n                \"type\": {\n                    \"_nodetype\": \"FuncDecl\",\n                    \"coord\": \"./Testdata/post-1671941.c:1:15\",\n                    \"args\": {\n                        \"_nodetype\": \"ParamList\",\n                        \"coord\": \"./Testdata/post-1671941.c:1:38\",\n                        \"params\": [\n                            {\n                                \"_nodetype\": \"Decl\",\n                                \"name\": \"n\",\n                                \"quals\": [],\n                                \"storage\": [],\n                                \"funcspec\": [],\n                                \"coord\": \"./Testdata/post-1671941.c:1:38\",\n                                \"type\": {\n                                    \"_nodetype\": \"TypeDecl\",\n                                    \"declname\": \"n\",\n                                    \"quals\": [],\n                                    \"coord\": \"./Testdata/post-1671941.c:1:38\",\n                                    \"type\": {\n                                        \"_nodetype\": \"IdentifierType\",\n                                        \"names\": [\n                                            \"unsigned\",\n                                            \"char\"\n                                        ],\n                                        \"coord\": \"./Testdata/post-1671941.c:1:24\"\n                                    }\n                                },\n                                \"init\": null,\n                                \"bitsize\": null\n                            },\n                            {\n                                \"_nodetype\": \"Decl\",\n                                \"name\": \"pos1\",\n                                \"quals\": [],\n                                \"storage\": [],\n                                \"funcspec\": [],\n                                \"coord\": \"./Testdata/post-1671941.c:1:55\",\n                                \"type\": {\n                                    \"_nodetype\": \"TypeDecl\",\n                                    \"declname\": \"pos1\",\n                                    \"quals\": [],\n                                    \"coord\": \"./Testdata/post-1671941.c:1:55\",\n                                    \"type\": {\n                                        \"_nodetype\": \"IdentifierType\",\n                                        \"names\": [\n                                            \"unsigned\",\n                                            \"char\"\n                                        ],\n                                        \"coord\": \"./Testdata/post-1671941.c:1:41\"\n                                    }\n                                },\n                                \"init\": null,\n                                \"bitsize\": null\n                            },\n                            {\n                                \"_nodetype\": \"Decl\",\n                                \"name\": \"pos2\",\n                                \"quals\": [],\n                                \"storage\": [],\n                                \"funcspec\": [],\n                                \"coord\": \"./Testdata/post-1671941.c:1:75\",\n                                \"type\": {\n                                    \"_nodetype\": \"TypeDecl\",\n                                    \"declname\": \"pos2\",\n                                    \"quals\": [],\n                                    \"coord\": \"./Testdata/post-1671941.c:1:75\",\n                                    \"type\": {\n                                        \"_nodetype\": \"IdentifierType\",\n                                        \"names\": [\n                                            \"unsigned\",\n                                            \"char\"\n                                        ],\n                                        \"coord\": \"./Testdata/post-1671941.c:1:61\"\n                                    }\n                                },\n                                \"init\": null,\n                                \"bitsize\": null\n                            }\n                        ]\n                    },\n                    \"type\": {\n                        \"_nodetype\": \"TypeDecl\",\n                        \"declname\": \"bit_swap\",\n                        \"quals\": [],\n                        \"coord\": \"./Testdata/post-1671941.c:1:15\",\n                        \"type\": {\n                            \"_nodetype\": \"IdentifierType\",\n                            \"names\": [\n                                \"unsigned\",\n                                \"char\"\n                            ],\n                            \"coord\": \"./Testdata/post-1671941.c:1:1\"\n                        }\n                    }\n                },\n                \"init\": null,\n                \"bitsize\": null\n            },\n            \"body\": {\n                \"_nodetype\": \"Compound\",\n                \"coord\": \"./Testdata/post-1671941.c:2:1\",\n                \"block_items\": [\n                    {\n                        \"_nodetype\": \"Decl\",\n                        \"name\": \"mask1\",\n                        \"quals\": [],\n                        \"storage\": [],\n                        \"funcspec\": [],\n                        \"coord\": \"./Testdata/post-1671941.c:3:19\",\n                        \"type\": {\n                            \"_nodetype\": \"TypeDecl\",\n                            \"declname\": \"mask1\",\n                            \"quals\": [],\n                            \"coord\": \"./Testdata/post-1671941.c:3:19\",\n                            \"type\": {\n                                \"_nodetype\": \"IdentifierType\",\n                                \"names\": [\n                                    \"unsigned\",\n                                    \"char\"\n                                ],\n                                \"coord\": \"./Testdata/post-1671941.c:3:5\"\n                            }\n                        },\n                        \"init\": {\n                            \"_nodetype\": \"BinaryOp\",\n                            \"op\": \"<<\",\n                            \"coord\": \"./Testdata/post-1671941.c:3:27\",\n                            \"left\": {\n                                \"_nodetype\": \"Constant\",\n                                \"type\": \"int\",\n                                \"value\": \"0x01\",\n                                \"coord\": \"./Testdata/post-1671941.c:3:27\"\n                            },\n                            \"right\": {\n                                \"_nodetype\": \"ID\",\n                                \"name\": \"pos1\",\n                                \"coord\": \"./Testdata/post-1671941.c:3:35\"\n                            }\n                        },\n                        \"bitsize\": null\n                    },\n                    {\n                        \"_nodetype\": \"Decl\",\n                        \"name\": \"mask2\",\n                        \"quals\": [],\n                        \"storage\": [],\n                        \"funcspec\": [],\n                        \"coord\": \"./Testdata/post-1671941.c:4:19\",\n                        \"type\": {\n                            \"_nodetype\": \"TypeDecl\",\n                            \"declname\": \"mask2\",\n                            \"quals\": [],\n                            \"coord\": \"./Testdata/post-1671941.c:4:19\",\n                            \"type\": {\n                                \"_nodetype\": \"IdentifierType\",\n                                \"names\": [\n                                    \"unsigned\",\n                                    \"char\"\n                                ],\n                                \"coord\": \"./Testdata/post-1671941.c:4:5\"\n                            }\n                        },\n                        \"init\": {\n                            \"_nodetype\": \"BinaryOp\",\n                            \"op\": \"<<\",\n                            \"coord\": \"./Testdata/post-1671941.c:4:27\",\n                            \"left\": {\n                                \"_nodetype\": \"Constant\",\n                                \"type\": \"int\",\n                                \"value\": \"0x01\",\n                                \"coord\": \"./Testdata/post-1671941.c:4:27\"\n                            },\n                            \"right\": {\n                                \"_nodetype\": \"ID\",\n                                \"name\": \"pos2\",\n                                \"coord\": \"./Testdata/post-1671941.c:4:35\"\n                            }\n                        },\n                        \"bitsize\": null\n                    },\n                    {\n                        \"_nodetype\": \"If\",\n                        \"coord\": \"./Testdata/post-1671941.c:5:4\",\n                        \"cond\": {\n                            \"_nodetype\": \"UnaryOp\",\n                            \"op\": \"!\",\n                            \"coord\": \"./Testdata/post-1671941.c:5:12\",\n                            \"expr\": {\n                                \"_nodetype\": \"BinaryOp\",\n                                \"op\": \"!=\",\n                                \"coord\": \"./Testdata/post-1671941.c:5:12\",\n                                \"left\": {\n                                    \"_nodetype\": \"BinaryOp\",\n                                    \"op\": \"&\",\n                                    \"coord\": \"./Testdata/post-1671941.c:5:12\",\n                                    \"left\": {\n                                        \"_nodetype\": \"ID\",\n                                        \"name\": \"n\",\n                                        \"coord\": \"./Testdata/post-1671941.c:5:12\"\n                                    },\n                                    \"right\": {\n                                        \"_nodetype\": \"ID\",\n                                        \"name\": \"mask1\",\n                                        \"coord\": \"./Testdata/post-1671941.c:5:16\"\n                                    }\n                                },\n                                \"right\": {\n                                    \"_nodetype\": \"BinaryOp\",\n                                    \"op\": \"&\",\n                                    \"coord\": \"./Testdata/post-1671941.c:5:27\",\n                                    \"left\": {\n                                        \"_nodetype\": \"ID\",\n                                        \"name\": \"n\",\n                                        \"coord\": \"./Testdata/post-1671941.c:5:27\"\n                                    },\n                                    \"right\": {\n                                        \"_nodetype\": \"ID\",\n                                        \"name\": \"mask2\",\n                                        \"coord\": \"./Testdata/post-1671941.c:5:31\"\n                                    }\n                                }\n                            }\n                        },\n                        \"iftrue\": {\n                            \"_nodetype\": \"Assignment\",\n                            \"op\": \"^=\",\n                            \"coord\": \"./Testdata/post-1671941.c:6:9\",\n                            \"lvalue\": {\n                                \"_nodetype\": \"ID\",\n                                \"name\": \"n\",\n                                \"coord\": \"./Testdata/post-1671941.c:6:9\"\n                            },\n                            \"rvalue\": {\n                                \"_nodetype\": \"BinaryOp\",\n                                \"op\": \"|\",\n                                \"coord\": \"./Testdata/post-1671941.c:6:15\",\n                                \"left\": {\n                                    \"_nodetype\": \"ID\",\n                                    \"name\": \"mask1\",\n                                    \"coord\": \"./Testdata/post-1671941.c:6:15\"\n                                },\n                                \"right\": {\n                                    \"_nodetype\": \"ID\",\n                                    \"name\": \"mask2\",\n                                    \"coord\": \"./Testdata/post-1671941.c:6:23\"\n                                }\n                            }\n                        },\n                        \"iffalse\": null\n                    },\n                    {\n                        \"_nodetype\": \"Return\",\n                        \"coord\": \"./Testdata/post-1671941.c:7:5\",\n                        \"expr\": {\n                            \"_nodetype\": \"ID\",\n                            \"name\": \"n\",\n                            \"coord\": \"./Testdata/post-1671941.c:7:12\"\n                        }\n                    }\n                ]\n            },\n            \"param_decls\": null\n        }\n    ]\n}"