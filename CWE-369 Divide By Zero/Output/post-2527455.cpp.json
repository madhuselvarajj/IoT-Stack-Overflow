"{\n    \"_nodetype\": \"FileAST\",\n    \"coord\": null,\n    \"ext\": [\n        {\n            \"_nodetype\": \"Decl\",\n            \"name\": \"command\",\n            \"quals\": [],\n            \"storage\": [],\n            \"funcspec\": [],\n            \"coord\": \"./Testdata/post-2527455.cpp:1:7\",\n            \"type\": {\n                \"_nodetype\": \"ArrayDecl\",\n                \"dim_quals\": [],\n                \"coord\": \"./Testdata/post-2527455.cpp:1:7\",\n                \"type\": {\n                    \"_nodetype\": \"TypeDecl\",\n                    \"declname\": \"command\",\n                    \"quals\": [],\n                    \"coord\": \"./Testdata/post-2527455.cpp:1:7\",\n                    \"type\": {\n                        \"_nodetype\": \"IdentifierType\",\n                        \"names\": [\n                            \"char\"\n                        ],\n                        \"coord\": \"./Testdata/post-2527455.cpp:1:2\"\n                    }\n                },\n                \"dim\": {\n                    \"_nodetype\": \"ID\",\n                    \"name\": \"MAX_COMMAND\",\n                    \"coord\": \"./Testdata/post-2527455.cpp:1:15\"\n                }\n            },\n            \"init\": null,\n            \"bitsize\": null\n        },\n        {\n            \"_nodetype\": \"FuncDef\",\n            \"coord\": \"./Testdata/post-2527455.cpp:2:7\",\n            \"decl\": {\n                \"_nodetype\": \"Decl\",\n                \"name\": \"loop\",\n                \"quals\": [],\n                \"storage\": [],\n                \"funcspec\": [],\n                \"coord\": \"./Testdata/post-2527455.cpp:2:7\",\n                \"type\": {\n                    \"_nodetype\": \"FuncDecl\",\n                    \"coord\": \"./Testdata/post-2527455.cpp:2:7\",\n                    \"type\": {\n                        \"_nodetype\": \"TypeDecl\",\n                        \"declname\": \"loop\",\n                        \"quals\": [],\n                        \"coord\": \"./Testdata/post-2527455.cpp:2:7\",\n                        \"type\": {\n                            \"_nodetype\": \"IdentifierType\",\n                            \"names\": [\n                                \"void\"\n                            ],\n                            \"coord\": \"./Testdata/post-2527455.cpp:2:2\"\n                        }\n                    },\n                    \"args\": null\n                },\n                \"init\": null,\n                \"bitsize\": null\n            },\n            \"body\": {\n                \"_nodetype\": \"Compound\",\n                \"coord\": \"./Testdata/post-2527455.cpp:2:1\",\n                \"block_items\": [\n                    {\n                        \"_nodetype\": \"Decl\",\n                        \"name\": \"p\",\n                        \"quals\": [],\n                        \"storage\": [],\n                        \"funcspec\": [],\n                        \"coord\": \"./Testdata/post-2527455.cpp:3:11\",\n                        \"type\": {\n                            \"_nodetype\": \"PtrDecl\",\n                            \"quals\": [],\n                            \"coord\": \"./Testdata/post-2527455.cpp:3:11\",\n                            \"type\": {\n                                \"_nodetype\": \"TypeDecl\",\n                                \"declname\": \"p\",\n                                \"quals\": [],\n                                \"coord\": \"./Testdata/post-2527455.cpp:3:12\",\n                                \"type\": {\n                                    \"_nodetype\": \"IdentifierType\",\n                                    \"names\": [\n                                        \"char\"\n                                    ],\n                                    \"coord\": \"./Testdata/post-2527455.cpp:3:6\"\n                                }\n                            }\n                        },\n                        \"init\": {\n                            \"_nodetype\": \"ID\",\n                            \"name\": \"command\",\n                            \"coord\": \"./Testdata/post-2527455.cpp:3:16\"\n                        },\n                        \"bitsize\": null\n                    },\n                    {\n                        \"_nodetype\": \"If\",\n                        \"coord\": \"./Testdata/post-2527455.cpp:4:5\",\n                        \"cond\": {\n                            \"_nodetype\": \"BinaryOp\",\n                            \"op\": \">\",\n                            \"coord\": \"./Testdata/post-2527455.cpp:4:8\",\n                            \"left\": {\n                                \"_nodetype\": \"FuncCall\",\n                                \"coord\": \"./Testdata/post-2527455.cpp:4:8\",\n                                \"name\": {\n                                    \"_nodetype\": \"StructRef\",\n                                    \"type\": \".\",\n                                    \"coord\": \"./Testdata/post-2527455.cpp:4:8\",\n                                    \"name\": {\n                                        \"_nodetype\": \"ID\",\n                                        \"name\": \"Serial\",\n                                        \"coord\": \"./Testdata/post-2527455.cpp:4:8\"\n                                    },\n                                    \"field\": {\n                                        \"_nodetype\": \"ID\",\n                                        \"name\": \"available\",\n                                        \"coord\": \"./Testdata/post-2527455.cpp:4:15\"\n                                    }\n                                },\n                                \"args\": null\n                            },\n                            \"right\": {\n                                \"_nodetype\": \"Constant\",\n                                \"type\": \"int\",\n                                \"value\": \"0\",\n                                \"coord\": \"./Testdata/post-2527455.cpp:4:29\"\n                            }\n                        },\n                        \"iftrue\": {\n                            \"_nodetype\": \"Compound\",\n                            \"coord\": \"./Testdata/post-2527455.cpp:4:1\",\n                            \"block_items\": [\n                                {\n                                    \"_nodetype\": \"Decl\",\n                                    \"name\": \"clinput\",\n                                    \"quals\": [],\n                                    \"storage\": [],\n                                    \"funcspec\": [],\n                                    \"coord\": \"./Testdata/post-2527455.cpp:5:11\",\n                                    \"type\": {\n                                        \"_nodetype\": \"TypeDecl\",\n                                        \"declname\": \"clinput\",\n                                        \"quals\": [],\n                                        \"coord\": \"./Testdata/post-2527455.cpp:5:11\",\n                                        \"type\": {\n                                            \"_nodetype\": \"IdentifierType\",\n                                            \"names\": [\n                                                \"int\"\n                                            ],\n                                            \"coord\": \"./Testdata/post-2527455.cpp:5:7\"\n                                        }\n                                    },\n                                    \"init\": {\n                                        \"_nodetype\": \"FuncCall\",\n                                        \"coord\": \"./Testdata/post-2527455.cpp:5:21\",\n                                        \"name\": {\n                                            \"_nodetype\": \"StructRef\",\n                                            \"type\": \".\",\n                                            \"coord\": \"./Testdata/post-2527455.cpp:5:21\",\n                                            \"name\": {\n                                                \"_nodetype\": \"ID\",\n                                                \"name\": \"Serial\",\n                                                \"coord\": \"./Testdata/post-2527455.cpp:5:21\"\n                                            },\n                                            \"field\": {\n                                                \"_nodetype\": \"ID\",\n                                                \"name\": \"read\",\n                                                \"coord\": \"./Testdata/post-2527455.cpp:5:28\"\n                                            }\n                                        },\n                                        \"args\": null\n                                    },\n                                    \"bitsize\": null\n                                },\n                                {\n                                    \"_nodetype\": \"Assignment\",\n                                    \"op\": \"=\",\n                                    \"coord\": \"./Testdata/post-2527455.cpp:6:5\",\n                                    \"lvalue\": {\n                                        \"_nodetype\": \"ArrayRef\",\n                                        \"coord\": \"./Testdata/post-2527455.cpp:6:5\",\n                                        \"name\": {\n                                            \"_nodetype\": \"ID\",\n                                            \"name\": \"command\",\n                                            \"coord\": \"./Testdata/post-2527455.cpp:6:5\"\n                                        },\n                                        \"subscript\": {\n                                            \"_nodetype\": \"UnaryOp\",\n                                            \"op\": \"p++\",\n                                            \"coord\": \"./Testdata/post-2527455.cpp:6:13\",\n                                            \"expr\": {\n                                                \"_nodetype\": \"ID\",\n                                                \"name\": \"p\",\n                                                \"coord\": \"./Testdata/post-2527455.cpp:6:13\"\n                                            }\n                                        }\n                                    },\n                                    \"rvalue\": {\n                                        \"_nodetype\": \"Cast\",\n                                        \"coord\": \"./Testdata/post-2527455.cpp:6:20\",\n                                        \"to_type\": {\n                                            \"_nodetype\": \"Typename\",\n                                            \"name\": null,\n                                            \"quals\": [],\n                                            \"coord\": \"./Testdata/post-2527455.cpp:0:1\",\n                                            \"type\": {\n                                                \"_nodetype\": \"TypeDecl\",\n                                                \"declname\": null,\n                                                \"quals\": [],\n                                                \"coord\": null,\n                                                \"type\": {\n                                                    \"_nodetype\": \"IdentifierType\",\n                                                    \"names\": [\n                                                        \"char\"\n                                                    ],\n                                                    \"coord\": \"./Testdata/post-2527455.cpp:6:21\"\n                                                }\n                                            }\n                                        },\n                                        \"expr\": {\n                                            \"_nodetype\": \"ID\",\n                                            \"name\": \"clinput\",\n                                            \"coord\": \"./Testdata/post-2527455.cpp:6:26\"\n                                        }\n                                    }\n                                }\n                            ]\n                        },\n                        \"iffalse\": null\n                    }\n                ]\n            },\n            \"param_decls\": null\n        }\n    ]\n}"